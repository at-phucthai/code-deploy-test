version: "3.0"

services:
### Nginx ###########################################
  proxy:
    image: proxy
    container_name: proxy
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "80:8080"
    environment:
      - UPSTREAM_HOST=app
    command: >
      /bin/sh -c
      "envsubst '$$UPSTREAM_HOST'
      < /etc/nginx/conf.d/default.conf.template
      > /etc/nginx/conf.d/default.conf
      && nginx -g 'daemon off;'"
    volumes:
      - ./docker/nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./public:/var/www/public
    networks:
      - autodeploy-network
    logging:
      driver: json-file
    depends_on:
      - app

### PHP-FPM ###########################################
  app:
    image: app
    container_name: app
    build:
      context: .
      dockerfile: docker/php-fpm/Dockerfile
    volumes:
      - .:/var/www/html
      - ./docker/php-fpm/php.ini:/usr/local/etc/php/conf.d/php.ini
      # To avoid syncing the vendore directory
      - php_dependencies:/var/www/html/vendor
    networks:
      - autodeploy-network
    logging:
      driver: json-file
    depends_on:
      - db

### Mysql ###########################################
  db:
    image: mysql:5.6
    container_name: db
    volumes:
      - ./docker/mysql/data:/var/lib/mysql/data
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - autodeploy-network
networks:
  autodeploy-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  php_dependencies:
    driver: local
